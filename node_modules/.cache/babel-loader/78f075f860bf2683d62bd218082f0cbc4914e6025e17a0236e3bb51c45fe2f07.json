{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\logistik-company\\\\src\\\\components\\\\MapWithRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport markerIcon from '../images/marker-icon.png';\nimport { getDistance, getZoom, getcentrMap } from 'fakeApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar iconStyle = L.icon({\n  iconUrl: markerIcon,\n  iconSize: [30, 31],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  title: 'Початковий пункт',\n  alt: 'Початковий пункт'\n});\nconst MapWithRoute = _ref => {\n  _s();\n  let {\n    shipment\n  } = _ref;\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n  useEffect(() => {\n    const centrMap = getcentrMap(shipment);\n    const distance = getDistance(shipment.originRoute, shipment.destinationRoute);\n    const zoom = getZoom(distance);\n    const coordinates = [[shipment.originRoute.lat, shipment.originRoute.lng], [shipment.destinationRoute.lat, shipment.destinationRoute.lng]];\n    mapRef.current = L.map(mapContainerRef.current).setView(centrMap, zoom);\n    L.tileLayer('https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {\n      attribution: 'Map data &copy; <a href=\"https://www.google.com/\">Google</a>',\n      subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n      maxZoom: 20\n    }).addTo(mapRef.current);\n\n    // Додавання маркерів\n\n    iconStyle = L.icon({\n      iconUrl: markerIcon,\n      iconSize: [30, 31],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41],\n      title: 'Початковий пункт',\n      alt: 'Початковий пункт'\n    });\n    L.marker(shipment.originRoute, {\n      icon: iconStyle\n    }).addTo(mapRef.current);\n    iconStyle = L.icon({\n      iconUrl: markerIcon,\n      iconSize: [30, 31],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41],\n      title: 'Кінцевийвий пункт',\n      alt: 'Кінцевийвий пункт'\n    });\n    L.marker(shipment.destinationRoute, {\n      icon: iconStyle\n    }).addTo(mapRef.current);\n    // Додавання лінії маршруту\n    const routeLine = L.polyline(coordinates).addTo(mapRef.current);\n\n    // Збільшення масштабу, щоб лінія маршруту була видимою\n    mapRef.current.fitBounds(routeLine.getBounds());\n\n    // Очищення мапи під час розмонтування компонента\n    return () => {\n      mapRef.current.remove();\n    };\n  }, [shipment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainerRef,\n    style: {\n      height: '400px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 10\n  }, this);\n};\n_s(MapWithRoute, \"TxZHQx5jF3RpUSYIo/1rzUeoU8o=\");\n_c = MapWithRoute;\nexport default MapWithRoute;\nvar _c;\n$RefreshReg$(_c, \"MapWithRoute\");","map":{"version":3,"names":["React","useEffect","useRef","L","markerIcon","getDistance","getZoom","getcentrMap","jsxDEV","_jsxDEV","iconStyle","icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","title","alt","MapWithRoute","_ref","_s","shipment","mapContainerRef","mapRef","centrMap","distance","originRoute","destinationRoute","zoom","coordinates","lat","lng","current","map","setView","tileLayer","attribution","subdomains","maxZoom","addTo","marker","routeLine","polyline","fitBounds","getBounds","remove","ref","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/vscode/logistik-company/src/components/MapWithRoute.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport markerIcon from '../images/marker-icon.png';\r\nimport { getDistance, getZoom, getcentrMap } from 'fakeApi';\r\nvar iconStyle = L.icon({\r\n  iconUrl: markerIcon,\r\n  iconSize: [30, 31],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41],\r\n  title: 'Початковий пункт',\r\n  alt: 'Початковий пункт',\r\n});\r\n\r\nconst MapWithRoute = ({ shipment }) => {\r\n  const mapContainerRef = useRef(null);\r\n  const mapRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const centrMap = getcentrMap(shipment);\r\n    const distance = getDistance(\r\n      shipment.originRoute,\r\n      shipment.destinationRoute\r\n    );\r\n    const zoom = getZoom(distance);\r\n    const coordinates = [\r\n      [shipment.originRoute.lat, shipment.originRoute.lng],\r\n      [shipment.destinationRoute.lat, shipment.destinationRoute.lng],\r\n    ];\r\n\r\n    mapRef.current = L.map(mapContainerRef.current).setView(centrMap, zoom);\r\n\r\n    L.tileLayer('https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {\r\n      attribution:\r\n        'Map data &copy; <a href=\"https://www.google.com/\">Google</a>',\r\n      subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\r\n      maxZoom: 20,\r\n    }).addTo(mapRef.current);\r\n\r\n    // Додавання маркерів\r\n\r\n    iconStyle = L.icon({\r\n      iconUrl: markerIcon,\r\n      iconSize: [30, 31],\r\n      iconAnchor: [12, 41],\r\n      popupAnchor: [1, -34],\r\n      shadowSize: [41, 41],\r\n      title: 'Початковий пункт',\r\n      alt: 'Початковий пункт',\r\n    });\r\n    L.marker(shipment.originRoute, { icon: iconStyle }).addTo(mapRef.current);\r\n\r\n    iconStyle = L.icon({\r\n      iconUrl: markerIcon,\r\n      iconSize: [30, 31],\r\n      iconAnchor: [12, 41],\r\n      popupAnchor: [1, -34],\r\n      shadowSize: [41, 41],\r\n      title: 'Кінцевийвий пункт',\r\n      alt: 'Кінцевийвий пункт',\r\n    });\r\n\r\n    L.marker(shipment.destinationRoute, { icon: iconStyle }).addTo(\r\n      mapRef.current\r\n    );\r\n    // Додавання лінії маршруту\r\n    const routeLine = L.polyline(coordinates).addTo(mapRef.current);\r\n\r\n    // Збільшення масштабу, щоб лінія маршруту була видимою\r\n    mapRef.current.fitBounds(routeLine.getBounds());\r\n\r\n    // Очищення мапи під час розмонтування компонента\r\n    return () => {\r\n      mapRef.current.remove();\r\n    };\r\n  }, [shipment]);\r\n\r\n  return <div ref={mapContainerRef} style={{ height: '400px' }} />;\r\n};\r\n\r\nexport default MapWithRoute;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}