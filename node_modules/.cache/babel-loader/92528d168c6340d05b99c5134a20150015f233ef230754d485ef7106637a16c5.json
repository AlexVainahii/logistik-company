{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\logistik-company\\\\src\\\\components\\\\MapWithRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet-arrowheads\";\nimport \"leaflet/dist/leaflet.css\";\nimport markerIcon from \"../images/marker-icon.png\";\nimport { getDistance, getZoom, getcentrMap } from \"../fakeApi\";\nimport { Loader } from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar iconStyle = L.icon({\n  iconUrl: markerIcon,\n  iconSize: [30, 31],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n  title: \"Початковий пункт\",\n  alt: \"Початковий пункт\"\n});\nconst MapWithRoute = _ref => {\n  _s();\n  let {\n    shipment\n  } = _ref;\n  const mapContainerRef = useRef(null);\n  const mapRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const centrMap = getcentrMap(shipment);\n    const distance = getDistance(shipment.originRoute, shipment.destinationRoute);\n    const zoom = getZoom(distance);\n    const coordinates = [[shipment.originRoute.lat, shipment.originRoute.lng], [shipment.destinationRoute.lat, shipment.destinationRoute.lng]];\n    mapRef.current = L.map(mapContainerRef.current).setView(centrMap, zoom);\n    L.tileLayer(\"https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\", {\n      attribution: 'Map data &copy; <a href=\"https://www.google.com/\">Google</a>',\n      subdomains: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\n      maxZoom: 20\n    }).addTo(mapRef.current);\n\n    // Додавання маркерів\n\n    iconStyle = L.icon({\n      iconUrl: markerIcon,\n      iconSize: [30, 31],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41],\n      title: \"Початковий пункт\",\n      alt: \"Початковий пункт\"\n    });\n    L.marker(shipment.originRoute, {\n      icon: iconStyle\n    }).addTo(mapRef.current);\n    iconStyle = L.icon({\n      iconUrl: markerIcon,\n      iconSize: [30, 31],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41],\n      title: \"Кінцевийвий пункт\",\n      alt: \"Кінцевийвий пункт\"\n    });\n    L.marker(shipment.destinationRoute, {\n      icon: iconStyle\n    }).addTo(mapRef.current);\n    // Додавання лінії маршруту\n    const routeLine = L.polyline(coordinates).addTo(mapRef.current);\n    routeLine.arrowheads({\n      size: \"15px\",\n      frequency: \"endonly\"\n    });\n\n    // Збільшення масштабу, щоб лінія маршруту була видимою\n    mapRef.current.fitBounds(routeLine.getBounds());\n    // Завершення завантаження карти\n    setIsLoading(false);\n    // Очищення мапи під час розмонтування компонента\n    return () => {\n      mapRef.current.remove();\n    };\n  }, [shipment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainerRef,\n    style: {\n      height: \"400px\"\n    },\n    children: isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(MapWithRoute, \"MjnM480FRZPk6cvApUj3MNZ/5yU=\");\n_c = MapWithRoute;\nexport default MapWithRoute;\nvar _c;\n$RefreshReg$(_c, \"MapWithRoute\");","map":{"version":3,"names":["React","useState","useEffect","useRef","L","markerIcon","getDistance","getZoom","getcentrMap","Loader","jsxDEV","_jsxDEV","iconStyle","icon","iconUrl","iconSize","iconAnchor","popupAnchor","shadowSize","title","alt","MapWithRoute","_ref","_s","shipment","mapContainerRef","mapRef","isLoading","setIsLoading","centrMap","distance","originRoute","destinationRoute","zoom","coordinates","lat","lng","current","map","setView","tileLayer","attribution","subdomains","maxZoom","addTo","marker","routeLine","polyline","arrowheads","size","frequency","fitBounds","getBounds","remove","ref","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/vscode/logistik-company/src/components/MapWithRoute.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-arrowheads\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport markerIcon from \"../images/marker-icon.png\";\r\nimport { getDistance, getZoom, getcentrMap } from \"../fakeApi\";\r\nimport { Loader } from \"./Loader\";\r\nvar iconStyle = L.icon({\r\n  iconUrl: markerIcon,\r\n  iconSize: [30, 31],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41],\r\n  title: \"Початковий пункт\",\r\n  alt: \"Початковий пункт\",\r\n});\r\n\r\nconst MapWithRoute = ({ shipment }) => {\r\n  const mapContainerRef = useRef(null);\r\n  const mapRef = useRef(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const centrMap = getcentrMap(shipment);\r\n    const distance = getDistance(\r\n      shipment.originRoute,\r\n      shipment.destinationRoute\r\n    );\r\n    const zoom = getZoom(distance);\r\n    const coordinates = [\r\n      [shipment.originRoute.lat, shipment.originRoute.lng],\r\n      [shipment.destinationRoute.lat, shipment.destinationRoute.lng],\r\n    ];\r\n\r\n    mapRef.current = L.map(mapContainerRef.current).setView(centrMap, zoom);\r\n\r\n    L.tileLayer(\"https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\", {\r\n      attribution:\r\n        'Map data &copy; <a href=\"https://www.google.com/\">Google</a>',\r\n      subdomains: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\r\n      maxZoom: 20,\r\n    }).addTo(mapRef.current);\r\n\r\n    // Додавання маркерів\r\n\r\n    iconStyle = L.icon({\r\n      iconUrl: markerIcon,\r\n      iconSize: [30, 31],\r\n      iconAnchor: [12, 41],\r\n      popupAnchor: [1, -34],\r\n      shadowSize: [41, 41],\r\n      title: \"Початковий пункт\",\r\n      alt: \"Початковий пункт\",\r\n    });\r\n    L.marker(shipment.originRoute, { icon: iconStyle }).addTo(mapRef.current);\r\n\r\n    iconStyle = L.icon({\r\n      iconUrl: markerIcon,\r\n      iconSize: [30, 31],\r\n      iconAnchor: [12, 41],\r\n      popupAnchor: [1, -34],\r\n      shadowSize: [41, 41],\r\n      title: \"Кінцевийвий пункт\",\r\n      alt: \"Кінцевийвий пункт\",\r\n    });\r\n\r\n    L.marker(shipment.destinationRoute, { icon: iconStyle }).addTo(\r\n      mapRef.current\r\n    );\r\n    // Додавання лінії маршруту\r\n    const routeLine = L.polyline(coordinates).addTo(mapRef.current);\r\n    routeLine.arrowheads({\r\n      size: \"15px\",\r\n      frequency: \"endonly\",\r\n    });\r\n\r\n    // Збільшення масштабу, щоб лінія маршруту була видимою\r\n    mapRef.current.fitBounds(routeLine.getBounds());\r\n    // Завершення завантаження карти\r\n    setIsLoading(false);\r\n    // Очищення мапи під час розмонтування компонента\r\n    return () => {\r\n      mapRef.current.remove();\r\n    };\r\n  }, [shipment]);\r\n\r\n  return (\r\n    <div ref={mapContainerRef} style={{ height: \"400px\" }}>\r\n      {isLoading && <Loader />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapWithRoute;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}