{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\logistik-company\\\\src\\\\components\\\\ShipmentList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Title } from './ShipmentList.styled';\nimport { useState } from 'react';\nimport { FiltersBlock } from './FiltersBlock';\nimport { ShipmentBlock } from './ShipmentBlock';\nimport { Container } from './SharedLayout.styled';\nimport { getOrders, updateStatusBasedOnDate } from 'fakeApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ShipmentList = () => {\n  _s();\n  const [shipments, setShipments] = useState(null);\n  const [filteredShipments, setFilteredShipments] = useState(null);\n  const [filters, setFilters] = useState({\n    shipmentNum: '',\n    status: '',\n    originCity: '',\n    destinationCity: ''\n  });\n  const handleFilterChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: value\n    }));\n  };\n  const handleResetFilters = () => {\n    setFilters({\n      shipmentNum: '',\n      status: '',\n      originCity: '',\n      destinationCity: ''\n    });\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const fetchedShipments = await getOrders();\n        setShipments(fetchedShipments);\n        const updatedShipments = await updateStatusBasedOnDate(fetchedShipments);\n\n        // Оновити стан замовлень після оновлення статусів\n        setShipments(updatedShipments);\n      } catch (error) {\n        console.error('Помилка при отриманні перевезень:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (shipments) {\n      const applyFilters = shipment => {\n        const {\n          shipmentNum,\n          status,\n          originCity,\n          destinationCity\n        } = filters;\n        return shipment.shipmentNum.toString().toLowerCase().includes(shipmentNum.toLowerCase()) && shipment.statusShip.toString().toLowerCase().includes(status.toLowerCase()) && shipment.originCity.toLowerCase().includes(originCity.toLowerCase()) && shipment.destinationCity.toString().toLowerCase().includes(destinationCity.toLowerCase());\n      };\n      const filteredShipments = shipments.filter(applyFilters);\n      setFilteredShipments(filteredShipments);\n    }\n  }, [shipments, filters]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\u0412\\u0430\\u043D\\u0442\\u0430\\u0436\\u043D\\u0456 \\u043F\\u0435\\u0440\\u0435\\u0432\\u0435\\u0437\\u0435\\u043D\\u043D\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), filteredShipments && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FiltersBlock, {\n        filters: filters,\n        handleFilterChange: handleFilterChange,\n        handleResetFilters: handleResetFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), filteredShipments.map(shipment => /*#__PURE__*/_jsxDEV(ShipmentBlock, {\n        shipment: shipment\n      }, shipment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(ShipmentList, \"5lBM53E2CbpdcBRcEU6/7SyumXM=\");\n_c = ShipmentList;\nvar _c;\n$RefreshReg$(_c, \"ShipmentList\");","map":{"version":3,"names":["React","useEffect","Title","useState","FiltersBlock","ShipmentBlock","Container","getOrders","updateStatusBasedOnDate","jsxDEV","_jsxDEV","Fragment","_Fragment","ShipmentList","_s","shipments","setShipments","filteredShipments","setFilteredShipments","filters","setFilters","shipmentNum","status","originCity","destinationCity","handleFilterChange","event","name","value","target","prevFilters","handleResetFilters","fetchData","fetchedShipments","updatedShipments","error","console","applyFilters","shipment","toString","toLowerCase","includes","statusShip","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["C:/vscode/logistik-company/src/components/ShipmentList.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Title } from './ShipmentList.styled';\r\nimport { useState } from 'react';\r\nimport { FiltersBlock } from './FiltersBlock';\r\nimport { ShipmentBlock } from './ShipmentBlock';\r\nimport { Container } from './SharedLayout.styled';\r\nimport { getOrders, updateStatusBasedOnDate } from 'fakeApi';\r\n\r\nexport const ShipmentList = () => {\r\n  const [shipments, setShipments] = useState(null);\r\n  const [filteredShipments, setFilteredShipments] = useState(null);\r\n  const [filters, setFilters] = useState({\r\n    shipmentNum: '',\r\n    status: '',\r\n    originCity: '',\r\n    destinationCity: '',\r\n  });\r\n  const handleFilterChange = event => {\r\n    const { name, value } = event.target;\r\n    setFilters(prevFilters => ({\r\n      ...prevFilters,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleResetFilters = () => {\r\n    setFilters({\r\n      shipmentNum: '',\r\n      status: '',\r\n      originCity: '',\r\n      destinationCity: '',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const fetchedShipments = await getOrders();\r\n        setShipments(fetchedShipments);\r\n        const updatedShipments = await updateStatusBasedOnDate(\r\n          fetchedShipments\r\n        );\r\n\r\n        // Оновити стан замовлень після оновлення статусів\r\n        setShipments(updatedShipments);\r\n      } catch (error) {\r\n        console.error('Помилка при отриманні перевезень:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (shipments) {\r\n      const applyFilters = shipment => {\r\n        const { shipmentNum, status, originCity, destinationCity } = filters;\r\n        return (\r\n          shipment.shipmentNum\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(shipmentNum.toLowerCase()) &&\r\n          shipment.statusShip\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(status.toLowerCase()) &&\r\n          shipment.originCity\r\n            .toLowerCase()\r\n            .includes(originCity.toLowerCase()) &&\r\n          shipment.destinationCity\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(destinationCity.toLowerCase())\r\n        );\r\n      };\r\n\r\n      const filteredShipments = shipments.filter(applyFilters);\r\n      setFilteredShipments(filteredShipments);\r\n    }\r\n  }, [shipments, filters]);\r\n\r\n  return (\r\n    <Container>\r\n      <Title>Вантажні перевезення</Title>\r\n\r\n      {filteredShipments && (\r\n        <>\r\n          <FiltersBlock\r\n            filters={filters}\r\n            handleFilterChange={handleFilterChange}\r\n            handleResetFilters={handleResetFilters}\r\n          />\r\n          {filteredShipments.map(shipment => (\r\n            <ShipmentBlock key={shipment.id} shipment={shipment} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}