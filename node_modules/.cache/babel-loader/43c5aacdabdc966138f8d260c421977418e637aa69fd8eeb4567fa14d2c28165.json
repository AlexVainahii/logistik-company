{"ast":null,"code":"var _jsxFileName = \"C:\\\\vscode\\\\logistik-company\\\\src\\\\components\\\\Reviews.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { ReviewAuthor, ReviewContainer, ReviewContent, ReviewForm, ReviewInput, ReviewSubmitButton } from \"./Reviews.styled\";\nimport { addDataToMockAPI, addReviews, fetchDataFromMockAPI, getReviews } from \"../fakeApi\";\nimport ReviewsIcon from \"@mui/icons-material/Reviews\";\nimport { Loader } from \"./Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Reviews = () => {\n  _s();\n  const [reviews, setReviews] = useState([]);\n  const [newReviewAuthor, setNewReviewAuthor] = useState(\"\");\n  const [newReviewContent, setNewReviewContent] = useState(\"\");\n  const [isloading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const fetchedReviews = await fetchDataFromMockAPI(\"reviews\");\n        setReviews(fetchedReviews);\n      } catch (error) {\n        console.error(\"Помилка при отриманні перевезень:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleReviewAuthorChange = event => {\n    setNewReviewAuthor(event.target.value);\n  };\n  const handleReviewContentChange = event => {\n    setNewReviewContent(event.target.value);\n  };\n  const handleReviewSubmit = event => {\n    event.preventDefault();\n    if (newReviewAuthor.trim() !== \"\" && newReviewContent.trim() !== \"\") {\n      const newReview = {\n        id: nanoid(),\n        author: newReviewAuthor,\n        content: newReviewContent\n      };\n      addDataToMockAPI(newReview, \"reviews\");\n      addReviews(newReview);\n      setReviews([...reviews, newReview]);\n      setNewReviewAuthor(\"\");\n      setNewReviewContent(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0412\\u0456\\u0434\\u0433\\u0443\\u043A\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), isloading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }, this), reviews.map(review => /*#__PURE__*/_jsxDEV(ReviewContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ReviewAuthor, {\n          children: review.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ReviewContent, {\n          children: review.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, review.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(ReviewForm, {\n        onSubmit: handleReviewSubmit,\n        children: [/*#__PURE__*/_jsxDEV(ReviewInput, {\n          type: \"text\",\n          placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0456\\u043C'\\u044F\",\n          value: newReviewAuthor,\n          onChange: handleReviewAuthorChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReviewInput, {\n          type: \"text\",\n          placeholder: \"\\u0412\\u0430\\u0448 \\u0432\\u0456\\u0434\\u0433\\u0443\\u043A\",\n          value: newReviewContent,\n          onChange: handleReviewContentChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ReviewSubmitButton, {\n          type: \"submit\",\n          children: [\"\\u041D\\u0430\\u0434\\u0456\\u0441\\u043B\\u0430\\u0442\\u0438 \\u0432\\u0456\\u0434\\u0433\\u0443\\u043A \", /*#__PURE__*/_jsxDEV(ReviewsIcon, {\n            style: {\n              marginLeft: \"20px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Reviews, \"qm95ook57eUHqUl2NlIWUJ1uZ1g=\");\n_c = Reviews;\nvar _c;\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["useEffect","useState","nanoid","ReviewAuthor","ReviewContainer","ReviewContent","ReviewForm","ReviewInput","ReviewSubmitButton","addDataToMockAPI","addReviews","fetchDataFromMockAPI","getReviews","ReviewsIcon","Loader","jsxDEV","_jsxDEV","Reviews","_s","reviews","setReviews","newReviewAuthor","setNewReviewAuthor","newReviewContent","setNewReviewContent","isloading","setIsLoading","fetchData","fetchedReviews","error","console","handleReviewAuthorChange","event","target","value","handleReviewContentChange","handleReviewSubmit","preventDefault","trim","newReview","id","author","content","children","fileName","_jsxFileName","lineNumber","columnNumber","map","review","onSubmit","type","placeholder","onChange","required","style","marginLeft","_c","$RefreshReg$"],"sources":["C:/vscode/logistik-company/src/components/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\nimport {\r\n  ReviewAuthor,\r\n  ReviewContainer,\r\n  ReviewContent,\r\n  ReviewForm,\r\n  ReviewInput,\r\n  ReviewSubmitButton,\r\n} from \"./Reviews.styled\";\r\nimport {\r\n  addDataToMockAPI,\r\n  addReviews,\r\n  fetchDataFromMockAPI,\r\n  getReviews,\r\n} from \"../fakeApi\";\r\nimport ReviewsIcon from \"@mui/icons-material/Reviews\";\r\nimport { Loader } from \"./Loader\";\r\n\r\nexport const Reviews = () => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const [newReviewAuthor, setNewReviewAuthor] = useState(\"\");\r\n  const [newReviewContent, setNewReviewContent] = useState(\"\");\r\n  const [isloading, setIsLoading] = useState(true);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const fetchedReviews = await fetchDataFromMockAPI(\"reviews\");\r\n        setReviews(fetchedReviews);\r\n      } catch (error) {\r\n        console.error(\"Помилка при отриманні перевезень:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  const handleReviewAuthorChange = (event) => {\r\n    setNewReviewAuthor(event.target.value);\r\n  };\r\n\r\n  const handleReviewContentChange = (event) => {\r\n    setNewReviewContent(event.target.value);\r\n  };\r\n\r\n  const handleReviewSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (newReviewAuthor.trim() !== \"\" && newReviewContent.trim() !== \"\") {\r\n      const newReview = {\r\n        id: nanoid(),\r\n        author: newReviewAuthor,\r\n        content: newReviewContent,\r\n      };\r\n      addDataToMockAPI(newReview, \"reviews\");\r\n      addReviews(newReview);\r\n      setReviews([...reviews, newReview]);\r\n      setNewReviewAuthor(\"\");\r\n      setNewReviewContent(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <div>\r\n        <h2>Відгуки</h2>\r\n        {isloading && <Loader />}\r\n        {reviews.map((review) => (\r\n          <ReviewContainer key={review.id}>\r\n            <ReviewAuthor>{review.author}</ReviewAuthor>\r\n            <ReviewContent>{review.content}</ReviewContent>\r\n          </ReviewContainer>\r\n        ))}\r\n        <ReviewForm onSubmit={handleReviewSubmit}>\r\n          <ReviewInput\r\n            type=\"text\"\r\n            placeholder=\"Ваше ім'я\"\r\n            value={newReviewAuthor}\r\n            onChange={handleReviewAuthorChange}\r\n            required\r\n          />\r\n          <ReviewInput\r\n            type=\"text\"\r\n            placeholder=\"Ваш відгук\"\r\n            value={newReviewContent}\r\n            onChange={handleReviewContentChange}\r\n            required\r\n          />\r\n          <ReviewSubmitButton type=\"submit\">\r\n            Надіслати відгук <ReviewsIcon style={{ marginLeft: \"20px\" }} />\r\n          </ReviewSubmitButton>\r\n        </ReviewForm>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}